version: '3.8'

services:
  # Symfony application container
  app:
    build: 
      context: ./dockerfiles 
      dockerfile: Dockerfile.app  # Build the image from a Dockerfile
    container_name: symfony_app
    working_dir: /var/www/symfony
    volumes:
      - .:/var/www/symfony  # Mount the current directory
      - ./dockerfiles/php.ini:/usr/local/etc/php/php.ini # Custom PHP settings
    networks:
      - symfony_network
    depends_on:
      - db
      - redis

  # Web server
  nginx:
    image: nginx:latest
    container_name: symfony_nginx
    volumes:
      - .:/var/www/symfony
      - ./dockerfiles/default.conf:/etc/nginx/conf.d/default.conf  # Custom NGINX configuration
    ports:
      - "8000:80"  # Host port to access the app
    networks:
      - symfony_network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: symfony_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password  # Change for security
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: symfony_user
      MYSQL_PASSWORD: symfony_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - symfony_network

  # Redis Cache
  redis:
    image: redis:latest
    container_name: symfony_redis
    ports:
      - "6379:6379"
    networks:
      - symfony_network

  # Composer for managing dependencies
  composer:
    image: composer:latest
    container_name: symfony_composer
    working_dir: /var/www/symfony
    volumes:
      - .:/var/www/symfony
    networks:
      - symfony_network
    command: ["composer", "install"]

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  symfony_network:
    driver: bridge

volumes:
  db_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
